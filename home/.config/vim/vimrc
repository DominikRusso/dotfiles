" Sections
"   -> General
"   -> Plugins
"   -> Plugin Customization
"   -> Navigation
"   -> Meta Navigation
"   -> Indenting
"   -> Searching
"   -> Deleting
"   -> Visual & UI
"   -> Behavior & Commands
"   -> File Type Specific Stuff
"   -> Security


" =============================================================================
" => General
" =============================================================================

" disable vi backward compatibility
set nocompatible

let mapleader=" "

set encoding=utf-8
set fileencoding=utf-8
set termencoding=utf-8

" don't redraw when not necessary
" dramatically speeds up macros
set lazyredraw

" hide, don't close, buffer on abandon
set hidden

" no backup files (this does not include swap files)
set nobackup
set nowritebackup

" don't break in the middle of a word
set linebreak

" stop lines being broken at 80 chars
set tw=0

filetype plugin indent on


" =============================================================================
" => Plugins
" =============================================================================

call plug#begin('~/.config/vim/plugged')

" general enhancements
Plug '/usr/local/opt/fzf'
Plug 'airblade/vim-rooter'
Plug 'ciaranm/securemodelines'
Plug 'editorconfig/editorconfig-vim'
Plug 'junegunn/fzf.vim'
Plug 'junegunn/vim-easy-align'
Plug 'sirver/ultisnips'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-speeddating'
Plug 'tpope/vim-surround'

" language support
Plug 'lervag/vimtex'
Plug 'rust-lang/rust.vim'

" visual enhancements
Plug 'itchyny/lightline.vim'

call plug#end()


" =============================================================================
" => Plugin Customization
" =============================================================================

" lightline
let g:lightline = {
            \ 'colorscheme': 'one'
            \ }

" rust
" run rustfmt on write
let g:rustfmt_autosave = 1

" ultisnips
let g:UltiSnipsSnippetDirectories=[$XDG_CONFIG_HOME.'/vim/UltiSnips']
let g:UltiSnipsExpandTrigger = '<tab>'
let g:UltiSnipsJumpForwardTrigger = '<tab>'
let g:UltiSnipsJumpBackwardTrigger = '<s-tab>'

" vim rooter
" stop vim-rooter changing directory automatically
let g:rooter_manual_only = 1

" vimtex
" disable quickfix mode
let g:vimtex_quickfix_mode=0
" set pdfviewer to zathura
let g:vimtex_view_method='zathura'


" =============================================================================
" => Navigation
" =============================================================================

" disable arrow keys in all modes except command mode
noremap <up> <nop>
noremap <down> <nop>
noremap <left> <nop>
noremap <right> <nop>
inoremap <up> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>

nnoremap <leader>r :Rooter<CR>


" =============================================================================
" => Meta Navigation
" =============================================================================

" split in TTB and LTR directions
set splitbelow splitright

" abbreviate key chords for moving between splits
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" left and right arrow keys switch buffers
nnoremap <left> :bp<CR>
nnoremap <right> :bn<CR>

nnoremap <leader>f :Files<CR>
nnoremap <leader>b :Buffers<CR>


" =============================================================================
" => Indenting
" =============================================================================

" copy indent onto next line
set autoindent

" infer indentation of next line
set smartindent

" preserve indentation on line wraps
set breakindent

" the editorconfig plugin handles tabstop,
" softtabstop, shiftwidth and expandtab


" =============================================================================
" => Searching
" =============================================================================

" case insensitive search
set ignorecase

" except when query contains uppercase
set smartcase


" =============================================================================
" => Deleting
" =============================================================================

" backspace over everything in insert mode
set backspace=indent,eol,start


" =============================================================================
" => Visual & UI
" =============================================================================

" enable syntax highlighting
syntax on

" source colors
source $HOME/.config/vim/colors.vim

" hybrid line numbering
set number relativenumber

" compress gutter
set numberwidth=3

" disable (duplicate) info about mode
set noshowmode

" less verbose messages + no splash screen
set shortmess=acI

" set scroll offset to 3 lines
set scrolloff=3

" enable wildmenu
set wildmenu

" complete longest string and show list
set wildmode=list:longest

" show matching brackets
set showmatch

" don't move cursor back
set mat=0

" disable error bells
set noerrorbells
set visualbell
set t_vb=

" solid vertical bar in insert mode
let &t_SI = "\<Esc>[6 q"
" solid underscore cursor in replace mode
let &t_SR = "\<Esc>[4 q"
" solid block cursor in normal mode
let &t_EI = "\<Esc>[2 q"


" =============================================================================
" => Behavior & Commands
" =============================================================================

" allow saving files as root when vim not invoked as such
cmap w!! w !sudo tee >/dev/null %

" unmap F1 from help
map <F1> <Esc>
imap <F1> <Esc>

nnoremap <leader>m :!make<CR>
nnoremap <leader>n :noh<CR>
nnoremap <leader>se :setlocal spell! spelllang=en_us<CR>
nnoremap <leader>sg :setlocal spell! spelllang=de_de<CR>
nnoremap <leader>sv :source $MYVIMRC<CR>
nnoremap <leader>w :w<CR>


" delete trailing whitespace on save
au BufWritePre * silent! %s/\s\+$//e

" no auto-commenting on newline
au FileType * setlocal fo-=c fo-=r fo-=o

" auto read external file changes
set autoread
au BufEnter,CursorHold,FocusGained * checktime

" absolute line numbering when not in focus
augroup numbertoggle
    autocmd!
    au BufEnter,FocusGained * set relativenumber
    au BufLeave,FocusLost   * set norelativenumber
augroup END


" =============================================================================
" => File Type Specific Stuff
" =============================================================================

" git commit messages
" turn on spell check in git commits
au FileType gitcommit set spell

" TeX
" default to LaTeX when editing tex files
let g:tex_flavor='latex'


" =============================================================================
" => Security
" =============================================================================

" disable commands being run from local .vimrcs and .exrcs
set secure

" disable modelines
let g:secure_modelines_allowed_items = []
